{"version":3,"sources":["js/03-promises.js"],"names":["refs","inputDelay","document","querySelector","inputStep","inputAmount","btnSubmit","form","position","handleSubmit","event","preventDefault","elements","delay","step","amount","currentTarget","i","value","console","log","delay1","Number","onCreateSuccess","onCreateError","addEventListener","createPromise","then","catch"],"mappings":";AAAA,MAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,UAAWJ,SAASC,cAAc,OAClCI,KAAML,SAASC,cAAc,SAE/B,IAAIK,EAAW,EAGf,SAASC,EAAaC,GACpBA,EAAMC,iBAEA,MACJC,UAAU,MAAEC,EAAF,KAASC,EAAT,OAAeC,IACvBL,EAAMM,cAEL,IAAA,IAAIC,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,GAAK,EAAG,CACxCT,GAAY,EACZW,QAAQC,IAAI,cAAeP,EAAMK,OACjCC,QAAQC,IAAI,aAAcN,EAAKI,OACzBG,MAAAA,EAASC,OAAOT,EAAMK,OAASI,OAAOR,EAAKI,MAAQD,GACzDE,QAAQC,IAAIC,IAmBhB,SAASE,GAAgB,SAAEf,EAAF,OAAYa,IACnCF,QAAQC,2BAA2BZ,QAAea,OAEpD,SAASG,GAAc,SAAEhB,EAAF,OAAYa,IACjCF,QAAQC,0BAA0BZ,QAAea,OArCnDrB,EAAKO,KAAKkB,iBAAiB,SAAUhB,GA+BrCiB,cAAc,CAAElB,SAAAA,EAAUa,OAAAA,SAAUM,KAAKJ,GAAiBK,MAAMJ","file":"03-promises.244f75fa.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('btn'),\n  form: document.querySelector('form'),\n};\nlet position = 0;\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    position += 1;\n    console.log('delay.value', delay.value);\n    console.log('step.value', step.value);\n    const delay1 = Number(delay.value) + Number(step.value * i);\n    console.log(delay1);\n    function createPromise(position, delay1) {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const shouldResolve = Math.random() > 0.3;\n\n          if (shouldResolve) {\n            resolve({ position, delay1 });\n          }\n          reject({ position, delay1 });\n        }, delay1);\n        //   });\n      });\n    }\n  }\n}\n\ncreatePromise({ position, delay1 }).then(onCreateSuccess).catch(onCreateError);\n\nfunction onCreateSuccess({ position, delay1 }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay1}ms`);\n}\nfunction onCreateError({ position, delay1 }) {\n  console.log(`❌ Rejected promise ${position} in ${delay1}ms`);\n}\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   return new Promise((resolve, reject) => {\n//     if (shouldResolve) {\n//       resolve({ position, delay });\n//       // Fulfill\n//     }\n//     reject({ position, delay });\n//   });\n// }\n\n// let formSubmit = {};\n// refs.form.addEventListener('submit', createPromise);\n\n// function onSubmitForm() {\n//   const formSubmit = new FormData(evt.currentTarget);\n//   const { z, x, c } = formSubmit;\n//   alert(formSubmit);\n// }\n// console.log(formSubmit);\n// const step = 500;\n// const amount = 5;\n// const start = 1000;\n// let position = 0;\n// refs.btnSubmit.addEventListener('click', createPromise);\n// const createPromise = () => {\n//   position += 1;\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       const delay = step * position;\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       }\n//       reject({ position, delay });\n//     }, start + delay * position);\n//   });\n// };\n\n// createPromise().then(onCreateSuccess).catch(onCreateError);\n\n// function onCreateSuccess({ position, delay }) {\n//   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// }\n// function onCreateError({ position, delay }) {\n//   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// }\n"]}